            case {{fieldIndex}}:
{{~#if complexType}}
{{~#if maxOccurs}}
                getJaxb().get{{capFirst @key}}().clear();
                if (value instanceof java.util.List) {
                    for (Object wrapperItem : (java.util.List<?>) value) {
                        if (wrapperItem instanceof {{capFirst @key}}JaxbWrapper){
                            getJaxb().get{{capFirst @key}}().add((({{capFirst @key}}JaxbWrapper) wrapperItem).getJaxb());
                        }
                    }
                }
{{~else}}
                getJaxb().set{{capFirst @key}}((({{capFirst @key}}JaxbWrapper) value).getJaxb());
{{~/if ~}}{{!-- maxOccurs --}}
{{~else}}
{{~#if choiceType}}
                switch (alternativeIndex) {
{{~#each alternatives}}
                case {{fieldIndex}}:
{{~#if complexType}}
                    getJaxb().set{{capFirst @key}}((({{capFirst @key}}JaxbWrapper) value).getJaxb());
{{~else}}
                    getJaxb().set{{capFirst @key}}(({{javaTypeName}}) value);
{{~/if ~}}{{!-- complexType in choiceType--}}
                    break;
{{~/each}}{{!-- this: fields in choice type --}}
                default:
                    throw new InvalidChoiceTypeAlternative("{{choiceTypeName}}",
                            alternativeIndex);
                }
{{~else}}
{{~#if maxOccurs}}
                getJaxb().get{{capFirst @key}}().clear();
                if (value instanceof java.util.List) {
                    for (Object item : (java.util.List<?>) value) {
                        if (item instanceof {{javaTypeName}}){
                            getJaxb().get{{capFirst @key}}().add(({{javaTypeName}}) item);
                        }
                    }
                }
{{~else}}
                getJaxb().set{{capFirst @key}}(({{javaTypeName}}) value);
{{~/if ~}}{{!-- maxOccurs --}}
{{~/if ~}}{{!-- choiceType --}}
{{~/if ~}}{{!-- complexType --}}
                break;